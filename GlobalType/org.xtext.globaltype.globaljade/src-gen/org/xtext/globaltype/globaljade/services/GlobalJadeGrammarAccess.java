/*
 * generated by Xtext 2.34.0
 */
package org.xtext.globaltype.globaljade.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class GlobalJadeGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globaltype.globaljade.GlobalJade.Model");
		private final Assignment cProtocolsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cProtocolsProtocolsParserRuleCall_0 = (RuleCall)cProtocolsAssignment.eContents().get(0);
		
		///*
		// * gbjade
		// */
		//Model:
		//    protocols+=Protocols*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//protocols+=Protocols*
		public Assignment getProtocolsAssignment() { return cProtocolsAssignment; }
		
		//Protocols
		public RuleCall getProtocolsProtocolsParserRuleCall_0() { return cProtocolsProtocolsParserRuleCall_0; }
	}
	public class ProtocolsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globaltype.globaljade.GlobalJade.Protocols");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGlobalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cProtocolKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameGENERAL_NAMETerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRolesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRolesRoleParserRuleCall_4_0 = (RuleCall)cRolesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cRolesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cRolesRoleParserRuleCall_5_1_0 = (RuleCall)cRolesAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Alternatives cAlternatives_8 = (Alternatives)cGroup.eContents().get(8);
		private final Assignment cGlobalsAssignment_8_0 = (Assignment)cAlternatives_8.eContents().get(0);
		private final RuleCall cGlobalsGlobal_messageParserRuleCall_8_0_0 = (RuleCall)cGlobalsAssignment_8_0.eContents().get(0);
		private final Assignment cForLoopAssignment_8_1 = (Assignment)cAlternatives_8.eContents().get(1);
		private final RuleCall cForLoopFor_loopParserRuleCall_8_1_0 = (RuleCall)cForLoopAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Protocols:
		//    // global protocol declaration
		//    'global' 'protocol' name=GENERAL_NAME '(' roles+=Role (',' roles+=Role)*')'
		//    // start function
		//    '{'
		//        (globals+=Global_message
		//        |forLoop+=For_loop
		//        )+
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// global protocol declaration
		//'global' 'protocol' name=GENERAL_NAME '(' roles+=Role (',' roles+=Role)*')'
		//// start function
		//'{'
		//    (globals+=Global_message
		//    |forLoop+=For_loop
		//    )+
		//'}'
		public Group getGroup() { return cGroup; }
		
		//// global protocol declaration
		//'global'
		public Keyword getGlobalKeyword_0() { return cGlobalKeyword_0; }
		
		//'protocol'
		public Keyword getProtocolKeyword_1() { return cProtocolKeyword_1; }
		
		//name=GENERAL_NAME
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//GENERAL_NAME
		public RuleCall getNameGENERAL_NAMETerminalRuleCall_2_0() { return cNameGENERAL_NAMETerminalRuleCall_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//roles+=Role
		public Assignment getRolesAssignment_4() { return cRolesAssignment_4; }
		
		//Role
		public RuleCall getRolesRoleParserRuleCall_4_0() { return cRolesRoleParserRuleCall_4_0; }
		
		//(',' roles+=Role)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//roles+=Role
		public Assignment getRolesAssignment_5_1() { return cRolesAssignment_5_1; }
		
		//Role
		public RuleCall getRolesRoleParserRuleCall_5_1_0() { return cRolesRoleParserRuleCall_5_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//// start function
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//(globals+=Global_message
		//|forLoop+=For_loop
		//)+
		public Alternatives getAlternatives_8() { return cAlternatives_8; }
		
		//globals+=Global_message
		public Assignment getGlobalsAssignment_8_0() { return cGlobalsAssignment_8_0; }
		
		//Global_message
		public RuleCall getGlobalsGlobal_messageParserRuleCall_8_0_0() { return cGlobalsGlobal_messageParserRuleCall_8_0_0; }
		
		//forLoop+=For_loop
		public Assignment getForLoopAssignment_8_1() { return cForLoopAssignment_8_1; }
		
		//For_loop
		public RuleCall getForLoopFor_loopParserRuleCall_8_1_0() { return cForLoopFor_loopParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class For_loopElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globaltype.globaljade.GlobalJade.For_loop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cForallKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameGENERAL_NAMETerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cInKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRoleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRoleGENERAL_NAMETerminalRuleCall_3_0 = (RuleCall)cRoleAssignment_3.eContents().get(0);
		private final Keyword cDoKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cGlobalsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cGlobalsGlobal_messageParserRuleCall_6_0 = (RuleCall)cGlobalsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//For_loop:
		//    'forall' name=GENERAL_NAME 'in' role=GENERAL_NAME 'do' '{'
		//        (
		//            globals+=Global_message*
		//        )
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'forall' name=GENERAL_NAME 'in' role=GENERAL_NAME 'do' '{'
		//    (
		//        globals+=Global_message*
		//    )
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'forall'
		public Keyword getForallKeyword_0() { return cForallKeyword_0; }
		
		//name=GENERAL_NAME
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//GENERAL_NAME
		public RuleCall getNameGENERAL_NAMETerminalRuleCall_1_0() { return cNameGENERAL_NAMETerminalRuleCall_1_0; }
		
		//'in'
		public Keyword getInKeyword_2() { return cInKeyword_2; }
		
		//role=GENERAL_NAME
		public Assignment getRoleAssignment_3() { return cRoleAssignment_3; }
		
		//GENERAL_NAME
		public RuleCall getRoleGENERAL_NAMETerminalRuleCall_3_0() { return cRoleGENERAL_NAMETerminalRuleCall_3_0; }
		
		//'do'
		public Keyword getDoKeyword_4() { return cDoKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//(
		//    globals+=Global_message*
		//)
		public Assignment getGlobalsAssignment_6() { return cGlobalsAssignment_6; }
		
		//Global_message
		public RuleCall getGlobalsGlobal_messageParserRuleCall_6_0() { return cGlobalsGlobal_messageParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class Global_messageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globaltype.globaljade.GlobalJade.Global_message");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeTYPE_MESSAGETerminalRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRoleAAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRoleAGENERAL_NAMETerminalRuleCall_4_0 = (RuleCall)cRoleAAssignment_4.eContents().get(0);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cRoleBAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cRoleBGENERAL_NAMETerminalRuleCall_6_0 = (RuleCall)cRoleBAssignment_6.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Global_message:
		//    type=TYPE_MESSAGE '(' ')' 'from' roleA=GENERAL_NAME 'to' roleB=GENERAL_NAME ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type=TYPE_MESSAGE '(' ')' 'from' roleA=GENERAL_NAME 'to' roleB=GENERAL_NAME ';'
		public Group getGroup() { return cGroup; }
		
		//type=TYPE_MESSAGE
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//TYPE_MESSAGE
		public RuleCall getTypeTYPE_MESSAGETerminalRuleCall_0_0() { return cTypeTYPE_MESSAGETerminalRuleCall_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//roleA=GENERAL_NAME
		public Assignment getRoleAAssignment_4() { return cRoleAAssignment_4; }
		
		//GENERAL_NAME
		public RuleCall getRoleAGENERAL_NAMETerminalRuleCall_4_0() { return cRoleAGENERAL_NAMETerminalRuleCall_4_0; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//roleB=GENERAL_NAME
		public Assignment getRoleBAssignment_6() { return cRoleBAssignment_6; }
		
		//GENERAL_NAME
		public RuleCall getRoleBGENERAL_NAMETerminalRuleCall_6_0() { return cRoleBGENERAL_NAMETerminalRuleCall_6_0; }
		
		//';'
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}
	public class RoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globaltype.globaljade.GlobalJade.Role");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRoleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRoleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRoleGENERAL_NAMETerminalRuleCall_1_0 = (RuleCall)cRoleAssignment_1.eContents().get(0);
		
		//Role:
		//    'role' role=GENERAL_NAME // dovrei mettere la parte opzionale per quanto riguarda piu' ruoli
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'role' role=GENERAL_NAME
		public Group getGroup() { return cGroup; }
		
		//'role'
		public Keyword getRoleKeyword_0() { return cRoleKeyword_0; }
		
		//role=GENERAL_NAME
		public Assignment getRoleAssignment_1() { return cRoleAssignment_1; }
		
		//GENERAL_NAME
		public RuleCall getRoleGENERAL_NAMETerminalRuleCall_1_0() { return cRoleGENERAL_NAMETerminalRuleCall_1_0; }
	}
	
	
	private final ModelElements pModel;
	private final ProtocolsElements pProtocols;
	private final For_loopElements pFor_loop;
	private final Global_messageElements pGlobal_message;
	private final TerminalRule tTYPE_MESSAGE;
	private final RoleElements pRole;
	private final TerminalRule tGENERAL_NAME;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GlobalJadeGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pProtocols = new ProtocolsElements();
		this.pFor_loop = new For_loopElements();
		this.pGlobal_message = new Global_messageElements();
		this.tTYPE_MESSAGE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globaltype.globaljade.GlobalJade.TYPE_MESSAGE");
		this.pRole = new RoleElements();
		this.tGENERAL_NAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globaltype.globaljade.GlobalJade.GENERAL_NAME");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.globaltype.globaljade.GlobalJade".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	///*
	// * gbjade
	// */
	//Model:
	//    protocols+=Protocols*
	//;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Protocols:
	//    // global protocol declaration
	//    'global' 'protocol' name=GENERAL_NAME '(' roles+=Role (',' roles+=Role)*')'
	//    // start function
	//    '{'
	//        (globals+=Global_message
	//        |forLoop+=For_loop
	//        )+
	//    '}'
	//;
	public ProtocolsElements getProtocolsAccess() {
		return pProtocols;
	}
	
	public ParserRule getProtocolsRule() {
		return getProtocolsAccess().getRule();
	}
	
	//For_loop:
	//    'forall' name=GENERAL_NAME 'in' role=GENERAL_NAME 'do' '{'
	//        (
	//            globals+=Global_message*
	//        )
	//    '}'
	//;
	public For_loopElements getFor_loopAccess() {
		return pFor_loop;
	}
	
	public ParserRule getFor_loopRule() {
		return getFor_loopAccess().getRule();
	}
	
	//Global_message:
	//    type=TYPE_MESSAGE '(' ')' 'from' roleA=GENERAL_NAME 'to' roleB=GENERAL_NAME ';'
	//;
	public Global_messageElements getGlobal_messageAccess() {
		return pGlobal_message;
	}
	
	public ParserRule getGlobal_messageRule() {
		return getGlobal_messageAccess().getRule();
	}
	
	//terminal TYPE_MESSAGE:
	//    'CFP' | 'REJECT-PROPOSAL' | 'ACCEPT-PROPOSAL'
	//;
	public TerminalRule getTYPE_MESSAGERule() {
		return tTYPE_MESSAGE;
	}
	
	//Role:
	//    'role' role=GENERAL_NAME // dovrei mettere la parte opzionale per quanto riguarda piu' ruoli
	//;
	public RoleElements getRoleAccess() {
		return pRole;
	}
	
	public ParserRule getRoleRule() {
		return getRoleAccess().getRule();
	}
	
	//terminal GENERAL_NAME:
	//    ('A'..'Z')+ ('a'..'z')*
	//;
	public TerminalRule getGENERAL_NAMERule() {
		return tGENERAL_NAME;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
