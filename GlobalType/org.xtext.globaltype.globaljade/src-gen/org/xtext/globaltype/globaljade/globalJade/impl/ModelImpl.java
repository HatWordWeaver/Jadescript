/**
 * generated by Xtext 2.34.0
 */
package org.xtext.globaltype.globaljade.globalJade.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.globaltype.globaljade.globalJade.GlobalJadePackage;
import org.xtext.globaltype.globaljade.globalJade.Model;
import org.xtext.globaltype.globaljade.globalJade.Protocol;
import org.xtext.globaltype.globaljade.globalJade.Roles;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.globaltype.globaljade.globalJade.impl.ModelImpl#getProtocolName <em>Protocol Name</em>}</li>
 *   <li>{@link org.xtext.globaltype.globaljade.globalJade.impl.ModelImpl#getRoles <em>Roles</em>}</li>
 *   <li>{@link org.xtext.globaltype.globaljade.globalJade.impl.ModelImpl#getProtocol <em>Protocol</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The default value of the '{@link #getProtocolName() <em>Protocol Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProtocolName()
   * @generated
   * @ordered
   */
  protected static final String PROTOCOL_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getProtocolName() <em>Protocol Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProtocolName()
   * @generated
   * @ordered
   */
  protected String protocolName = PROTOCOL_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getRoles() <em>Roles</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRoles()
   * @generated
   * @ordered
   */
  protected Roles roles;

  /**
   * The cached value of the '{@link #getProtocol() <em>Protocol</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProtocol()
   * @generated
   * @ordered
   */
  protected EList<Protocol> protocol;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GlobalJadePackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getProtocolName()
  {
    return protocolName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProtocolName(String newProtocolName)
  {
    String oldProtocolName = protocolName;
    protocolName = newProtocolName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GlobalJadePackage.MODEL__PROTOCOL_NAME, oldProtocolName, protocolName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Roles getRoles()
  {
    return roles;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRoles(Roles newRoles, NotificationChain msgs)
  {
    Roles oldRoles = roles;
    roles = newRoles;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GlobalJadePackage.MODEL__ROLES, oldRoles, newRoles);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRoles(Roles newRoles)
  {
    if (newRoles != roles)
    {
      NotificationChain msgs = null;
      if (roles != null)
        msgs = ((InternalEObject)roles).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GlobalJadePackage.MODEL__ROLES, null, msgs);
      if (newRoles != null)
        msgs = ((InternalEObject)newRoles).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GlobalJadePackage.MODEL__ROLES, null, msgs);
      msgs = basicSetRoles(newRoles, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GlobalJadePackage.MODEL__ROLES, newRoles, newRoles));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Protocol> getProtocol()
  {
    if (protocol == null)
    {
      protocol = new EObjectContainmentEList<Protocol>(Protocol.class, this, GlobalJadePackage.MODEL__PROTOCOL);
    }
    return protocol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GlobalJadePackage.MODEL__ROLES:
        return basicSetRoles(null, msgs);
      case GlobalJadePackage.MODEL__PROTOCOL:
        return ((InternalEList<?>)getProtocol()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GlobalJadePackage.MODEL__PROTOCOL_NAME:
        return getProtocolName();
      case GlobalJadePackage.MODEL__ROLES:
        return getRoles();
      case GlobalJadePackage.MODEL__PROTOCOL:
        return getProtocol();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GlobalJadePackage.MODEL__PROTOCOL_NAME:
        setProtocolName((String)newValue);
        return;
      case GlobalJadePackage.MODEL__ROLES:
        setRoles((Roles)newValue);
        return;
      case GlobalJadePackage.MODEL__PROTOCOL:
        getProtocol().clear();
        getProtocol().addAll((Collection<? extends Protocol>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GlobalJadePackage.MODEL__PROTOCOL_NAME:
        setProtocolName(PROTOCOL_NAME_EDEFAULT);
        return;
      case GlobalJadePackage.MODEL__ROLES:
        setRoles((Roles)null);
        return;
      case GlobalJadePackage.MODEL__PROTOCOL:
        getProtocol().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GlobalJadePackage.MODEL__PROTOCOL_NAME:
        return PROTOCOL_NAME_EDEFAULT == null ? protocolName != null : !PROTOCOL_NAME_EDEFAULT.equals(protocolName);
      case GlobalJadePackage.MODEL__ROLES:
        return roles != null;
      case GlobalJadePackage.MODEL__PROTOCOL:
        return protocol != null && !protocol.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (protocolName: ");
    result.append(protocolName);
    result.append(')');
    return result.toString();
  }

} //ModelImpl
